@model ngxsis.ViewModel.UserRoleViewModel

@using (Html.BeginForm("Create","UserRole",FormMethod.Post, new { id="form-create", name="form-create" }))
{
    @Html.AntiForgeryToken()
    
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="row">
        <div class="col-lg-6">
            <div class="input-group" style="width:60%;">
                <span class="input-group-btn">
                    <button class="btn btn-pp btn-search" style="height:45px;border-top-left-radius:7px;border-bottom-left-radius:7px;" type="button"><span class="glyphicon glyphicon-search" aria-hidden="true"></span></button>
                </span>
                <input type="text" id="txt-search" autocomplete="off" onkeyup="OpenDropDown();"  class="form-control text-box single-line" onchange="OpenDropDown();" style="margin-left:0px;border-top-right-radius:7px;border-bottom-right-radius:7px; height:45px;" placeholder="Cari" >
                <ul class="dropdown-menu btn-link-a" id="bio-List" style="width:100%">
                    @*<li><a href="javascript:void(0)" class="btn-link btn-list" data-container="">""</a></li>*@
                </ul>
                <span class="input-group-btn">
                    <button class="btn btn-clear" style="height:45px;color:#000080;margin-left:-25px;padding:0px 10px 2px 0px;background-color:transparent;font-size:20px;" type="button"><b>&times;</b></button>
                </span>
            </div>
        </div>
    </div>

        <div class="container" style="padding:0px;">
            <hr style="margin-left:-15px;margin-right:0px;margin-bottom:-3px; border-bottom:4px solid #000080;width:100%;"/>
            <div class="row" style="color: #000080;">
                <div class="col-lg-8">
                    <div class="row" style="margin-left:-30px;margin-top:10px;">
                        @Html.LabelFor(model => model.FullName, htmlAttributes: new { @class = "control-label col-md-12 pull-left"})
                    </div>
                    <div class="row ">
                        @*name*@
                        @Html.EditorFor(model => model.FullName, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly"
                   } })
                        @Html.ValidationMessageFor(model => model.FullName, "", new { @class = "text-danger"})
                    </div>

                    <div class="row username"  style="margin-left:-30px;margin-top:10px;">
                        @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-12 pull-left"})
                    </div>
                    <div class="row username">
                        @*email*@
                        @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                    </div>
                    <div class="row pass" style="margin-left:-30px;margin-top:10px;">
                        @Html.LabelFor(model => model.UserLoginPwd, htmlAttributes: new { @class = "control-label col-md-12 pull-left" })
                    </div>
                    <div class="row  pass">
                        @*email*@
                        @Html.EditorFor(model => model.UserLoginPwd, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.UserLoginPwd, "", new { @class = "text-danger" })
                    </div>

                    <div class="row " style="margin-top:10px;">
                        <div class="col-lg-6" style="padding-right:5px;padding-left:0px;">
                            @*password*@ 
                    <div class="row">
                        @Html.LabelFor(model => model.Abpwd, htmlAttributes: new { @class = "control-label col-md-12 pull-left"})
                    </div>
                        @Html.EditorFor(model => model.Abpwd, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Abpwd, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-lg-6" style="padding-right:0px;padding-left:5px;">
                            @* confirm password *@
                    <div class="row">
                        @Html.LabelFor(model => model.ConfirmAbpwd, htmlAttributes: new { @class = "control-label col-md-12 pull-left"})
                    </div>
                        @Html.EditorFor(model => model.ConfirmAbpwd, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ConfirmAbpwd, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-lg-4">
                    @* panel list role disini *@
                    <div class="panel panel-blue">
                        <div class="panel-heading">
                            <b>Role *</b>
                        </div>
                        <div class="panel-body">
                        </div>
                        <div id="data-role" style="overflow-y: scroll; overflow-x:hidden; margin:20px; color:#000080; max-height:85px;">
                            Loading...
                        </div>
                    </div>
                </div>
            </div>
            <hr style="margin-left:-15px;margin-right:0px;margin-top:30px;margin-bottom:15px; border-bottom:4px solid #000080;width:100%;" />
            <div class="row">
                <div class="col-lg-6 pull-left">
                    <button type="button" class="btn btn-lg btn-danger"><span class="glyphicon glyphicon-trash"></span></button>
                </div>
                <div class="col-lg-6 pull-right">
                    <div class="btn-group pull-right" style="margin-right:15px;" >
                        <button type="button" class="btn btn-warning btn-lg btn-120px btn-batal"><b>Batal</b></button>
                        <button type="submit" class="btn btn-pp btn-lg btn-120px"><b>Simpan</b></button>

                    </div>
                </div>
            </div>
        </div>
}

<script type="text/javascript">

    $("#form-create").submit(function () {
        $.ajax(
            {
                url: this.action,
                type: this.method,
                data: $(this).serialize(),
                success: function (result) {
                    if (result.success) {
                        alert("User Role berhasil dibuat");
                        GetForm();
                    } else {
                        //alert("Role tidak berhasil dibuat\n" + result.message);
                    }
                }
            });
        return false;
    });

    $(".btn-batal").click(function ()
    {
        $(".username").toggleClass('hidden');
        $(".pass").toggleClass('hidden');
        
    });

    $(document).ready(function () {
        $(".username").addClass('hidden');
        GetRole();
    });

    function GetRole() {
        //$("#txt-search").val(search)
        $.ajax(
            {
                url: '@Url.Action("RoleList","UserRole")',
                type: 'get',
                success: function (result) {
                    $("#data-role").html(result);
                }
            });
    }


    function OpenDropDown() {
        $.ajax(
            {
                url: '@Url.Action("BioBySearch","UserRole")',
                type: 'get',
                data: { search: $("#txt-search").val() },
                success: function (result)
                {
                    $("#bio-List").html(result);
                    $("#bio-List").slideDown();
                }
            });
    }
    $(document).click(function () {
        $(".dropdown-menu").hide();
    });

    
</script>