@model ngxsis.ViewModel.PendidikanViewModel


@using (Html.BeginForm("Edit", "Pendidikan", FormMethod.Post, new { id = "form-edit", name = "form-edit" }))
{
    @Html.HiddenFor(model => model.user_id, new { Value = Session["userID"] })
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.id)


    <div class="form-horizontal">

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.biodata_id)

        <div class="container">
            <div class="row">
                <div class="col-lg-6">
                    <div class="form-group">
                        <div class="col-md-12">
                            @Html.LabelFor(model => model.school_name, htmlAttributes: new { @class = "control-label" })
                        </div>
                        <div class="col-md-12">
                            @Html.EditorFor(model => model.school_name, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.school_name, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-lg-3">
                    <div class="form-group">
                        <div class="col-md-12">
                            @Html.LabelFor(model => model.city, htmlAttributes: new { @class = "control-label" })
                        </div>
                        <div class="col-md-12">
                            @Html.EditorFor(model => model.city, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.city, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-lg-3">
                    <div class="form-group">
                        <div class="col-md-12">
                            @Html.LabelFor(model => model.country, htmlAttributes: new { @class = "control-label" })
                        </div>
                        <div class="col-md-12">
                            @Html.EditorFor(model => model.country, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.country, "", new { @class = "text-danger" })

                        </div>

                    </div>
                </div>
            </div>

            <div class="row">
                <div class="col-lg-6">
                    <div class="form-group">
                        <div class="col-md-12">
                            @Html.LabelFor(model => model.education_level_id, htmlAttributes: new { @class = "control-label" })
                        </div>
                        <div class="col-md-12">
                            @Html.DropDownListFor(model => model.education_level_id
                       , (IEnumerable<SelectListItem>)ViewBag.PendidikanList, "-Pilih-", new { @class = "form-control", required = "required" })
                            @Html.ValidationMessageFor(model => model.education_level_id, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-lg-3">
                    <div class="form-group">
                        <div class="col-md-12">
                            @Html.LabelFor(model => model.entry_year, htmlAttributes: new { @class = "control-label" })
                        </div>
                        <div class="col-md-12">
                            @Html.DropDownListFor(model => model.entry_year, new SelectList(Enumerable.Range(DateTime.Today.Year - 20, 21)),
                    "-Pilih-",
                    new { @class = "form-control", id = "valid-year" })
                            @Html.ValidationMessageFor(model => model.entry_year, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-lg-3">
                    <div class="form-group">
                        <div class="col-md-12">
                            @Html.LabelFor(model => model.graduation_year, htmlAttributes: new { @class = "control-label" })
                        </div>
                        <div class="col-md-12">
                            @Html.DropDownListFor(model => model.graduation_year, new SelectList(Enumerable.Range(DateTime.Today.Year - 20, 21)),
                    "-Pilih-",
                    new { @class = "form-control", id = "valid-year" })
                            @Html.ValidationMessageFor(model => model.graduation_year, "", new { @class = "text-danger" })

                        </div>

                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-lg-6">
                    <div class="form-group">
                        <div class="col-md-12">
                            @Html.LabelFor(model => model.major, htmlAttributes: new { @class = "control-label" })
                        </div>
                        <div class="col-md-12">
                            @Html.EditorFor(model => model.major, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.major, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-lg-6">
                    <div class="form-group">
                        <div class="col-md-12">
                            @Html.LabelFor(model => model.gpa, htmlAttributes: new { @class = "control-label" })
                        </div>
                        <div class="col-md-12">
                            @Html.EditorFor(model => model.gpa, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.gpa, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-md-12">
                    <div class="form-group">
                        <div class="col-md-12">
                            @Html.LabelFor(model => model.notes, htmlAttributes: new { @class = "control-label" })
                        </div>
                        <div class="col-md-12">
                            @Html.EditorFor(model => model.notes, new { htmlAttributes = new { @class = "form-control form-notes" } })
                            @Html.ValidationMessageFor(model => model.notes, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
                <div class="col-md-offset-9">
                    <div class="btn-group" role="group" aria-label="...">
                        <input type="button" value="Batal" data-dismiss="modal" class="btn btn-batal" />
                        <input type="submit" value="Simpan" class="btn btn-simpan" />
                    </div>
                </div>
            </div>
        </div>

}

@Scripts.Render("~/bundles/jqueryval")

@section Scripts {

}


<script type="text/javascript">

    $("#form-edit").submit(function () {
        $("#biodata_id").val(biodata_id);
        //debugger;
        //if ($("#form-create").valid()) {
        $.ajax({
            url: this.action,
            type: this.method,
            data: $(this).serialize(),
            success: function (result) {
                if (result.success) {
                    alert("Data berhasil diubah");
                    $(".modal-create").modal("hide");
                    $(".modal-pelamar").modal("show");
                    GetPendidikan();
                }
                else {
                    console.log(result);
                    $("#form-edit").validate();
                    //alert("Error! " + result.message);
                }
            }
        });
        //debugger;
        return false;
    });




    $(".btn-batal").click(function () {
        $(".modal-create").modal("hide");
        $(".modal-pelamar").modal("show");
    });


    $(".close").click(function () {
        $(".modal-create").modal("hide");
        $(".modal-pelamar").modal("show");
    });
</script>



