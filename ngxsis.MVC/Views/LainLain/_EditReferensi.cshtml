@model ngxsis.ViewModel.LainLainViewModel


@using (Html.BeginForm("EditReferensi", "LainLain", FormMethod.Post, new { id = "form-edit", name = "form-edit" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.biodata_id)
        @Html.HiddenFor(model => model.referensiId)

        <div class="container">
            <div class="row">
                <div class="col-md-6">
                    <div class="form-group">
                        <div class="col-md-12">
                            @Html.LabelFor(model => model.name, htmlAttributes: new { @class = "control-label" })
                        </div>
                        <div class="col-md-12">
                            @Html.EditorFor(model => model.name, new { htmlAttributes = new { @class = "form-control text-input" } })
                            @Html.ValidationMessageFor(model => model.name, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group">
                        <div class="col-md-12">
                            @Html.LabelFor(model => model.address_phone, htmlAttributes: new { @class = "control-label " })
                        </div>
                        <div class="col-md-12">
                            @Html.EditorFor(model => model.address_phone, new { htmlAttributes = new { @class = "form-control text-input" } })
                            @Html.ValidationMessageFor(model => model.address_phone, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="col-md-6">
                    <div class="form-group">
                        <div class="col-md-12">
                            @Html.LabelFor(model => model.position, htmlAttributes: new { @class = "control-label" })
                        </div>
                        <div class="col-md-12">
                            @Html.EditorFor(model => model.position, new { htmlAttributes = new { @class = "form-control text-input" } })
                            @Html.ValidationMessageFor(model => model.position, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group">
                        <div class="col-md-12">
                            @Html.LabelFor(model => model.relation, htmlAttributes: new { @class = "control-label" })
                        </div>
                        <div class="col-md-12">
                            @Html.EditorFor(model => model.relation, new { htmlAttributes = new { @class = "form-control text-input" } })
                            @Html.ValidationMessageFor(model => model.relation, "", new { @class = "text-danger" }) 
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="container">
            <div class="row">
                <div class="form-actions col-lg-12 ">
                    <div class="btn-group pull-right">
                        <button type="button" class="btn btn-batal btn-120px">Batal</button>
                        <button type="submit" class="btn btn-simpan btn-120px">Simpan</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
}

@Scripts.Render("~/bundles/jqueryval")

<script type="text/javascript">
    //javascript
    $("#form-edit").submit(function () {
        $.ajax({
            url: this.action,
            type: this.method,
            data: $(this).serialize(),
            success: function (result) {
                if (result.success) {
                    alert("Data Berhasil di ubah");
                    $(".modal-create").modal("hide");
                    $(".modal-pelamar").modal("show");
                    GetListReferensi();
                }
                else {
                    $("#form-edit").validate();
                    //alert("Error! " + result.message);
                }
            }
        });
    return false;
    });

    $(".btn-batal").click(function () {
        $(".modal-create").modal("hide");
        $(".modal-pelamar").modal("show");
    });

    $(".close").click(function () {
        $(".modal-create").modal("hide");
        $(".modal-pelamar").modal("show");
    });

</script>
