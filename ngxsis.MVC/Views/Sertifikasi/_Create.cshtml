@model ngxsis.ViewModel.SertifikasiViewModel


@using (Html.BeginForm("Create", "Sertifikasi", FormMethod.Post, new { id = "form-create", name = "form-create" }))


{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="container">
            <div class="row">
                <div class="col-lg-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.certificate_name, htmlAttributes: new { @class = "control-label col-md-offset-1" })
                        <div class="col-md-12">
                            @Html.EditorFor(model => model.certificate_name, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                            @Html.ValidationMessageFor(model => model.certificate_name, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-lg-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.publisher, htmlAttributes: new { @class = "control-label col-md-offset-1" })
                        <div class="col-md-12">
                            @Html.EditorFor(model => model.publisher, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                            @Html.ValidationMessageFor(model => model.publisher, "", new { @class = "text-danger" })

                        </div>
                    </div>
                </div>
            </div>



            <div class="row">
                <div class="col-lg-6">
                    @Html.LabelFor(model => model.valid_start_month, htmlAttributes: new { @class = "control-label col-md-offset-1" })
                    <div class="form-group">
                        <div class="col-md-6">
                            @Html.DropDownListFor(model => model.valid_start_month,
                    new List<SelectListItem>
                    {
                        new SelectListItem { Value = "1", Text = "Januari" },
                        new SelectListItem { Value = "2", Text = "Februari" },
                        new SelectListItem { Value = "3", Text = "Maret" },
                        new SelectListItem { Value = "4", Text = "April" },
                        new SelectListItem { Value = "5", Text = "Mei" },
                        new SelectListItem { Value = "6", Text = "Juni" },
                        new SelectListItem { Value = "7", Text = "Juli" },
                        new SelectListItem { Value = "8", Text = "Agustus" },
                        new SelectListItem { Value = "9", Text = "September" },
                        new SelectListItem { Value = "10", Text = "Oktober" },
                        new SelectListItem { Value = "11", Text = "November" },
                        new SelectListItem { Value = "12", Text = "Desember" },

                    },
                    "-Pilih Bulan-",
                    new { @class = "form-control", id= "valid-month" })
                            @Html.ValidationMessageFor(model => model.valid_start_month, "", new { @class = "text-danger" })
                        </div>


                        <div class="col-md-6">
                            @Html.DropDownListFor(model => model.valid_start_year, new SelectList(Enumerable.Range(DateTime.Today.Year - 20, 21)),
                    "-Pilih Tahun-",
                    new { @class = "form-control", id = "valid-year" })

                            @Html.ValidationMessageFor(model => model.valid_start_year, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-lg-6">
                    @Html.LabelFor(model => model.until_month, htmlAttributes: new { @class = "control-label col-md-offset-1" })
                    <div class="form-group">
                        <div class="col-md-6">
                            @Html.DropDownListFor(model => model.until_month,
                    new List<SelectListItem>
                    {
                        new SelectListItem { Value = "1", Text = "Januari" },
                        new SelectListItem { Value = "2", Text = "Februari" },
                        new SelectListItem { Value = "3", Text = "Maret" },
                        new SelectListItem { Value = "4", Text = "April" },
                        new SelectListItem { Value = "5", Text = "Mei" },
                        new SelectListItem { Value = "6", Text = "Juni" },
                        new SelectListItem { Value = "7", Text = "Juli" },
                        new SelectListItem { Value = "8", Text = "Agustus" },
                        new SelectListItem { Value = "9", Text = "September" },
                        new SelectListItem { Value = "10", Text = "Oktober" },
                        new SelectListItem { Value = "11", Text = "November" },
                        new SelectListItem { Value = "12", Text = "Desember" },

                    },
                    "-Pilih Bulan-",
                    new { @class = "form-control",disabled="disabled", id="until-month" })
                            @Html.ValidationMessageFor(model => model.until_month, "", new { @class = "text-danger" })
                        </div>


                        <div class="col-md-6">
                        @Html.DropDownListFor(model => model.until_year, new SelectList(Enumerable.Range(DateTime.Today.Year - 20, 21)),
                    "-Pilih Tahun-",
                    new { @class = "form-control", disabled = "disabled", id = "until-year" })

                            @Html.ValidationMessageFor(model => model.until_year, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

            </div>

            <div class="row">
                <div class="col-md-12">
                    <div class="form-group">
                        @Html.LabelFor(model => model.notes, htmlAttributes: new { @class = "control-label col-md-offset-1" })
                        <div class="col-md-12">
                            @Html.EditorFor(model => model.notes, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.notes, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="row">
 
                <div class="col-md-offset-9">
                    <div class="btn-group" role="group" aria-label="...">

                        <input type="button" value="Batal" data-dismiss="modal" class="btn btn-batal" />
                        <input type="submit" value="Simpan" class="btn btn-simpan" />
                    </div>
                </div>
            </div>
        </div>
   
         
}

@Scripts.Render("~/bundles/jqueryval")
@section Scripts {
}

<script type="text/javascript">
    $("#form-create").submit(function () {

        $.ajax({
            url: this.action,
            type: this.method,
            data: $(this).serialize(),
            success: function (result) {
                if (result.success) {
                    alert("Simpan Sukses Full certificate_name : " + result.entity.certificate_name);
                    $(".modal-utama").modal("hide");
                    GetList();
                    //} else {
                    //    alert("error" + result.message);
                    //}
                }
            }
        });
        //console.log(result.entity.certificate_name);
        return false;
    });

 //disable js

    $(document).ready(function () {
        $('#valid-month').on('input change', function () {
            $('#until-month').attr('disabled', false);
        });
    })

    $(document).ready(function () {
        $('#valid-year').on('input change', function () {
            $('#until-year').attr('disabled', false);
        });
    })
</script>


